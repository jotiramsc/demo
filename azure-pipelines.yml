variables:
  artifactName: 'artifactNameVersion'

trigger:
- master
  
pool:
  vmImage: 'ubuntu-latest'


steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: '-Dmaven.test.skip package'


- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |  
     # version=$(grep version $(Build.SourcesDirectory)/pom.xml | grep -v '<?xml' | grep '<version>'|head -n 1|awk '{print $1}'| cut -d'>' -f 2 | cut -d'<' -f 1)
     #  echo $version
      # echo "##vso[task.setvariable variable=$(artifactName)]$version"
      # echo 'Artifact Version - $(artifactName)'  
     
      cd  '$(Build.SourcesDirectory)/target'
      echo 'Before rename---'
      ls  '$(Build.SourcesDirectory)/target'
      
      mv '$(artifactName).jar' '$(artifactName).zip'
      echo 'After rename---'
      ls  '$(Build.SourcesDirectory)/target'
      cd  '$(Build.SourcesDirectory)/..'   
   
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host $artifactName  
      [xml]$pomXml = Get-Content $(Build.SourcesDirectory)\pom.xml   
      $version=$pomXml.project.artifactId+'-'+$pomXml.project.version
      Write-Host $version  
      Write-Host "##vso[task.setvariable variable=artifactName]$version"
      Write-Host $artifactName
      
      Write-Host "##vso[task.setvariable variable=artifactName;isOutput=true]$version"
      Write-Host $artifactName
   
